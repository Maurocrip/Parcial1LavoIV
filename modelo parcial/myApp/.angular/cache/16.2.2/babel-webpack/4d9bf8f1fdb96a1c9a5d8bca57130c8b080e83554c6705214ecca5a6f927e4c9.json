{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let AltaActorComponent = class AltaActorComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.nombre = \"\";\n    this.apellido = \"\";\n    this.direccion = \"\";\n    this.usuario = \"\";\n    this.pais = [];\n    this.paisNombre = \"\";\n    this.email = \"\";\n    this.estado = \"\";\n    this.verificaEmail = false;\n    this.zip = 0;\n    this.grupo = this.fb.group({\n      nombre: [\"\", [Validators.required]],\n      apellido: [\"\", [Validators.required]],\n      usuario: [\"\", [Validators.required]],\n      email: [\"\", [Validators.required, Validators.email]],\n      zip: [\"\", [Validators.required]],\n      direccion: [\"\", [Validators.required]]\n    });\n  }\n  addItem(event) {\n    this.pais = event;\n    this.paisNombre = event.name.commun;\n  }\n  Guardar() {\n    if (this.pais != null) {\n      if (this.grupo.status == \"VALID\") {} else {}\n    } else {\n      alert(\"Seleccione un pais\");\n    }\n  }\n};\nAltaActorComponent = __decorate([Component({\n  selector: 'app-alta-actor',\n  templateUrl: './altaActor.component.html',\n  styleUrls: ['./altaActor.component.css']\n})], AltaActorComponent);\nexport class Actor {\n  constructor(nombre, apellido, dirección, usuario, pais, email, estado, zip) {\n    this.nombre = nombre;\n    this.apellido = apellido;\n    this.dirección = dirección;\n    this.usuario = usuario;\n    this.pais = pais;\n    this.email = email;\n    this.estado = estado;\n    this.zip = zip;\n  }\n}","map":{"version":3,"names":["Component","Validators","AltaActorComponent","constructor","fb","nombre","apellido","direccion","usuario","pais","paisNombre","email","estado","verificaEmail","zip","grupo","group","required","addItem","event","name","commun","Guardar","status","alert","__decorate","selector","templateUrl","styleUrls","Actor","dirección"],"sources":["C:\\Users\\Usuario\\Desktop\\UTN\\Labo y pp IV\\Laboratorio\\modelo parcial\\myApp\\src\\app\\components\\Actor\\alta\\alta.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TablaPaisesComponent} from 'src/app/components/tabla-paises/tabla-paises.component';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, FormsModule, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-alta-actor',\n  templateUrl: './altaActor.component.html',\n  styleUrls: ['./altaActor.component.css']\n})\nexport class AltaActorComponent \n{\n  public nombre : string = \"\";\n  public apellido : string= \"\";\n  public direccion : string= \"\";\n  public usuario : string= \"\";\n  public pais : any = []; \n  public paisNombre : string = \"\";\n  public email : string= \"\";\n  public estado : string= \"\";\n  public verificaEmail : boolean= false;\n  public zip : number= 0;\n\n  public grupo : FormGroup;\n  constructor(private fb : FormBuilder )\n  {\n    this.grupo = this.fb.group({\n      nombre : [\"\",[Validators.required]],\n      apellido :[\"\",[Validators.required]],\n      usuario :[\"\",[Validators.required]],\n      email :[\"\",[Validators.required, Validators.email]],\n      zip :[\"\",[Validators.required]],\n      direccion :[\"\",[Validators.required]],\n    });\n  };\n\n  addItem(event : any)\n  {\n    this.pais = event;\n    this.paisNombre = event.name.commun;\n  }\n\n\n  Guardar()\n  {\n    if(this.pais != null)\n    {\n      if(this.grupo.status == \"VALID\")\n      {\n        \n      }\n      else\n      {\n\n      }\n    }\n    else\n    {\n      alert(\"Seleccione un pais\")\n    }\n  }\n}\n\n\nexport class Actor \n{\n  nombre : string;\n  apellido : string;\n  dirección : string;\n  usuario : string;\n  pais : object;\n  email : string;\n  estado : string;\n  zip : number;\n\n  constructor(nombre : string, apellido : string, dirección : string, usuario : string, pais : object, email : string, estado : string, \n    zip : number)\n  {\n    this.nombre = nombre;\n    this.apellido = apellido;\n    this.dirección = dirección;\n    this.usuario = usuario;\n    this.pais = pais;\n    this.email = email;\n    this.estado = estado;\n    this.zip = zip;\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAA4EC,UAAU,QAAQ,gBAAgB;AAOvG,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAc7BC,YAAoBC,EAAgB;IAAhB,KAAAA,EAAE,GAAFA,EAAE;IAZf,KAAAC,MAAM,GAAY,EAAE;IACpB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,IAAI,GAAS,EAAE;IACf,KAAAC,UAAU,GAAY,EAAE;IACxB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,MAAM,GAAW,EAAE;IACnB,KAAAC,aAAa,GAAY,KAAK;IAC9B,KAAAC,GAAG,GAAW,CAAC;IAKpB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACX,EAAE,CAACY,KAAK,CAAC;MACzBX,MAAM,EAAG,CAAC,EAAE,EAAC,CAACJ,UAAU,CAACgB,QAAQ,CAAC,CAAC;MACnCX,QAAQ,EAAE,CAAC,EAAE,EAAC,CAACL,UAAU,CAACgB,QAAQ,CAAC,CAAC;MACpCT,OAAO,EAAE,CAAC,EAAE,EAAC,CAACP,UAAU,CAACgB,QAAQ,CAAC,CAAC;MACnCN,KAAK,EAAE,CAAC,EAAE,EAAC,CAACV,UAAU,CAACgB,QAAQ,EAAEhB,UAAU,CAACU,KAAK,CAAC,CAAC;MACnDG,GAAG,EAAE,CAAC,EAAE,EAAC,CAACb,UAAU,CAACgB,QAAQ,CAAC,CAAC;MAC/BV,SAAS,EAAE,CAAC,EAAE,EAAC,CAACN,UAAU,CAACgB,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAC,OAAOA,CAACC,KAAW;IAEjB,IAAI,CAACV,IAAI,GAAGU,KAAK;IACjB,IAAI,CAACT,UAAU,GAAGS,KAAK,CAACC,IAAI,CAACC,MAAM;EACrC;EAGAC,OAAOA,CAAA;IAEL,IAAG,IAAI,CAACb,IAAI,IAAI,IAAI,EACpB;MACE,IAAG,IAAI,CAACM,KAAK,CAACQ,MAAM,IAAI,OAAO,EAC/B,C,CAEC,MAED,C;KAGD,MAED;MACEC,KAAK,CAAC,oBAAoB,CAAC;;EAE/B;CACD;AAnDYtB,kBAAkB,GAAAuB,UAAA,EAL9BzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW1B,kBAAkB,CAmD9B;AAGD,OAAM,MAAO2B,KAAK;EAWhB1B,YAAYE,MAAe,EAAEC,QAAiB,EAAEwB,SAAkB,EAAEtB,OAAgB,EAAEC,IAAa,EAAEE,KAAc,EAAEC,MAAe,EAClIE,GAAY;IAEZ,IAAI,CAACT,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACwB,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACtB,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,GAAG,GAAGA,GAAG;EAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}